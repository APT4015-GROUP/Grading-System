name: CI and Safe deploy to Render

on:
  push:
    branches:
      - main  # Only push to main triggers test + deploy logic
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.0-beta, etc.

  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      SPRING_PROFILES_ACTIVE: test  # Ensures application-test.properties is used
      TESTDB_URL: jdbc:tc:mysql:8.0:///testdb
      TESTDB_USERNAME: root
      TESTDB_PASSWORD: chip1852
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      COHERE_API_MODEL: command-r-plus
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
      PORT: 8080

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Run API Integration Tests with Testcontainers
        run: ./gradlew apiTest

  deploy:
    name: Push to Production Branch
    needs: test  # Only runs if tests pass
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure Git for Pushing
        run: |
          git config user.name "Github Actions"
          git config user.email "actions@github.com"

      - name: Create Git Tag for Versioning
      - name: Push Code to Production Branch
        run: |
          VERSION_TAG="v1.0-${{ github.run_number }}"
          git tag $VERSION_TAG
          git push origin $VERSION_TAG
          
          git fetch origin
          git checkout -B production
          git push origin production --force
  
  release:
    name: Create GitHub Release
    needs: deploy  # This will run after the `deploy` job succeeds
    if: ${{ github.ref == 'refs/tags/v*' }}  # Only run if the push is a tag (like v1.0-beta)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Upload JAR to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}